{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(corrplot)\nlibrary(caret)\nlibrary(randomForest)\nlibrary(gridExtra)\n\nd1 <- read.table(\"student-mat.csv\", sep = \",\", header = TRUE)\nd2 <- read.table(\"student-por.csv\", sep = \",\", header = TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nd3 <- select(d3, -c(absences.y, health.y, Walc.y, Dalc.y, goout.y, freetime.y, famrel.y, \n                    romantic.y, higher.y, activities.y, famsup.y,\n                    schoolsup.y, failures.y, studytime.y, traveltime.y, guardian.y))\nnames(d3) <- c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\n               \"nursery\",\"internet\",\"guardian\", \"traveltime\",\"studytime\",\"failures\",\"schoolsup\",\n               \"famsup\",\"paid.mat\",\"activities\",\"higher\", \"romantic\",\"famrel\",\"freetime\",\"goout\",\n               \"Dalc\",\"Walc\",\"health\",\"absences\",\"G1.mat\", \"G2.mat\", \"G3.mat\",\"paid.por\",\"G1.por\",        \n               \"G2.por\", \"G3.por\")\n\nd3$avg = rowMeans(cbind(d3$G3.mat, d3$G3.por))\n\n\nnorep <- rbind(d1, d2)\nnorep <- norep %>% distinct(school, sex, age, address, famsize, Pstatus,\n                            Medu, Fedu, Mjob, Fjob, reason, guardian,\n                            traveltime, studytime, failures, schoolsup,\n                            famsup, activities, nursery, higher, internet,\n                            romantic, famrel, freetime, goout, Dalc, Walc,\n                            health, absences, .keep_all = TRUE)\n\n\nggplot(d3, aes(x=Dalc, y= avg, group=Dalc))+\n    geom_boxplot()+\n    theme(legend.position=\"none\")+\n    scale_fill_manual(values=waffle.col)+\n    xlab(\"Daily Alcohol consumption\")+\n    ylab(\"Average Grades\")+\n    ggtitle(\"Average Grade\")\n\nd3$Dalc <- as.factor(d3$Dalc)      \nd3$Walc <- mapvalues(d3$Walc, \n                        from = c(\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\"),\n                        to = 1:5)\n                              \n\nstr1=ggplot(d3, aes(x=G3.mat, y=G3.por)) +\n    geom_point(aes(colour=factor(Dalc)))+ scale_colour_hue(l=25,c=150)+\n    geom_smooth(method = \"lm\", se = FALSE)\n\n\nd3$Walc <- as.factor(d3$Walc)      \nd3$Walc <- mapvalues(d3$Walc, \n                              from = 1:5, \n                              to = c(\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\"))\n\nstr2=ggplot(d3, aes(x=G3.mat, y=G3.por))+\n    geom_point(aes(colour=factor(Walc)))+ scale_colour_hue(l=25,c=150)+\n    geom_smooth(method = \"lm\", se = FALSE)\n\ngrid.arrange(str1, str2)\n\nggplot(d3, aes(x=Dalc, y=G3.mat, fill=Dalc))+\n    geom_boxplot()+\n    theme_bw()+\n    theme(legend.position=\"none\")+\n#    scale_fill_manual(values=waffle.col)+\n    xlab(\"Consumo de alcool na semana\")+\n    ylab(\"Nota\")+\n    ggtitle(\"Nota final matematica\")\n\n\nggplot(d3, aes(x=Walc, y=G3.mat, fill=Walc))+\n    geom_boxplot()+\n    theme_bw()+\n    theme(legend.position=\"none\")+\n    #    scale_fill_manual(values=waffle.col)+\n    xlab(\"Consumo de alcool no fim de semana\")+\n    ylab(\"Nota\")+\n    ggtitle(\"Nota final matematica\")\n\n\nggplot(d3, aes(x=Dalc, y=G3.por, fill=Dalc))+\n    geom_boxplot()+\n    theme_bw()+\n    theme(legend.position=\"none\")+\n    #    scale_fill_manual(values=waffle.col)+\n    xlab(\"Consumo de alcool na semana\")+\n    ylab(\"Nota\")+\n    ggtitle(\"Nota final portugues\")\n\nggplot(d3, aes(x=Walc, y=G3.por, fill=Walc))+\n    geom_boxplot()+\n    theme_bw()+\n    theme(legend.position=\"none\")+\n    #    scale_fill_manual(values=waffle.col)+\n    xlab(\"Consumo de alcool no fim de semana\")+\n    ylab(\"Nota\")+\n    ggtitle(\"Nota final portugues\")\n\n# inicio random forest\nd4 <- d3[,c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,34,38,33, 37)]\nset.seed(1234)\nres <- randomForest(avg~., data=d4[,1:32], ntree=200, importance=T)\n\n#first combine the rf predictions and actual scores in a single data frame\nrfpltdata1=data.frame(cbind(pred, d4[,\"avg\"]))\ncolnames(rfpltdata1)<-c(\"pred\",\"avg\")\n\nd4$goout <- as.factor(d4$goout)\nd4$goout <- mapvalues(as.factor(d4$goout), \n                     from = 1:5, \n                     to = c(\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\"))\n# then create the error plot.\nggplot(rfpltdata2,aes(pred,avg))+\n    geom_point(aes(color=d4[,\"goout\"]))+\n    xlab(\"Predicted Grades (Random Forest with 200 Trees)\")+\n    ylab(\"Actual Grades\")+\n    geom_abline(intercept=0,slope=1,color=\"#0066CC\",size=1)+\n    #geom_smooth(method = \"lm\", se = FALSE)+\n    scale_colour_brewer(palette = \"Set1\",name = \" \\nConsumption\")\n#finally, plot the error plot from the random forest with the error plots of the linear and regression tree models.\ngrid.arrange(errplt.rf1)\n\nvarImpPlot(res,type=1)\n\nimp <- importance(res)\nimpvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]\nop <- par(mfrow=c(2, 3))\nfor (i in seq_along(impvar)) {\n    partialPlot(res, d4[,1:32], impvar[i], ,rug=TRUE, xlab=impvar[i],\n                main=paste(\"Partial Dependence on\", impvar[i]))\n    abline(h=mean(d4$avg),col=\"red\")\n}\npartialPlot(res, d4[,1:32], impvar[7], rug=TRUE, xlab=impvar[7], \n            main=paste(\"Partial Dependence on\", impvar[7]))\n    abline(h=mean(d4$avg), col=\"red\")\npartialPlot(res, d4[,1:32], impvar[13], rug=TRUE, xlab=impvar[13], \n                    main=paste(\"Partial Dependence on\", impvar[13]))\n    abline(h=mean(d4$avg), col=\"red\")\npar(op)\n\n\n\n\n",
    "created" : 1513184564520.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "3452953443",
    "id" : "109EAF2A",
    "lastKnownWriteTime" : 4320337440,
    "last_content_update" : 1513739634914,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "marks" : "<:44,-1\n>:44,-1",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}