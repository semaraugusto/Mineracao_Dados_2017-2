install.packages("gdata")
require(gdata)
retail = read.xls ("myfile.xlsx"), sheet = 1, header = TRUE)
retail = read.xls ("myfile.xlsx", sheet = 1, header = TRUE)
retail = read.xls ("Online retail.xlsx"), sheet = 1, header = TRUE)
retail = read.xls ("Online retail.xlsx", sheet = 1, header = TRUE)
require(readxl)
retail = read.xls ("Online retail.xlsx", sheet = 1, header = TRUE)
getwd()
retail <- read_excel('Online retail.xlsx')
colnames(retail)
retail %>%
ggplot(aes(x=Time)) +
geom_histogram(stat="count",fill="indianred")
library(plyr)
library(tidyverse)
library(tidyverse)
library(arules)
library(arulesViz)
require(readxl)
retail %>%
ggplot(aes(x=Time)) +
geom_histogram(stat="count",fill="indianred")
retail %>%
group_by(InvoiceNo) %>%
summarize(n_items = mean(Quantity)) %>%
ggplot(aes(x=n_items))+
geom_histogram(fill="steelblue3", bins = 100000) +
geom_rug() +
coord_cartesian(xlim=c(0,80))
View(retail)
retail$Date <- as.Date(retail$InvoiceDate)
retail$Time <- format(retail$InvoiceDate,"%H:%M:%S")
View(retail)
require(hms)
library(plyr)
library(tidyverse)
library(arules)
library(arulesViz)
require(readxl)
require(hms)
retail <- read_excel('Online retail.xlsx')
retail <- retail[complete.cases(retail), ]
retail <- retail %>% mutate(Description = as.factor(Description))
retail <- retail %>% mutate(Country = as.factor(Country))
retail$Date <- as.Date(retail$InvoiceDate)
retail$Time <- format(retail$InvoiceDate,"%H:%M:%S")
retail$InvoiceNo <- as.numeric(as.character(retail$InvoiceNo))
glimpse(retail)
str(retail)
retail$Time <- as.factor(retail$Time)
a <- hms(as.character(retail$Time))
a <- hms(as.character(retail$Time))
View(retail)
retail <- separate(reatil, Time, into=c("H", "Min", "Sec"))
b <- separate(retail, Time, into=c("H", "Min", "Sec"))
View(b)
retail$Time <- as.factor(retail$Time)
retail <- separate(retail, Time, into=c("H", "Min", "Sec"))
retail <- separate(retail, Time, into=c("H", "Min", "Sec"))
retail$Time = retail$H
View(retail)
library(plyr)
library(tidyverse)
library(arules)
library(arulesViz)
require(readxl)
require(hms)
retail <- read_excel('Online retail.xlsx')
retail <- retail[complete.cases(retail), ]
retail <- retail %>% mutate(Description = as.factor(Description))
retail <- retail %>% mutate(Country = as.factor(Country))
retail$Date <- as.Date(retail$InvoiceDate)
retail$Time <- format(retail$InvoiceDate,"%H:%M:%S")
retail$InvoiceNo <- as.numeric(as.character(retail$InvoiceNo))
glimpse(retail)
str(retail)
retail$Time <- as.factor(retail$Time)
retail <- separate(retail, Time, into=c("H", "Min", "Sec"))
retail$Time = retail$H
retail <- select(retail, -c("H", "Min", "Sec"))
retail <- select(retail, -c(H, Min, Sec))
View(retail)
library(plyr)
library(tidyverse)
library(arules)
library(arulesViz)
require(readxl)
require(hms)
retail <- read_excel('Online retail.xlsx')
retail <- retail[complete.cases(retail), ]
retail <- retail %>% mutate(Description = as.factor(Description))
retail <- retail %>% mutate(Country = as.factor(Country))
retail$Date <- as.Date(retail$InvoiceDate)
retail$Time <- format(retail$InvoiceDate,"%H:%M:%S")
retail$InvoiceNo <- as.numeric(as.character(retail$InvoiceNo))
glimpse(retail)
str(retail)
retail$Time <- as.factor(retail$Time)
retail <- separate(retail, Time, into=c("H", "Min", "Sec"))
retail$Time = retail$H
retail <- select(retail, -c(H,Min, Sec))
retail %>%
ggplot(aes(x=Time)) +
geom_histogram(stat="count",fill="indianred")
detach("package:plyr", unload=TRUE)
retail %>%
group_by(InvoiceNo) %>%
summarize(n_items = mean(Quantity)) %>%
ggplot(aes(x=n_items))+
geom_histogram(fill="steelblue3", bins = 100000) +
geom_rug() +
coord_cartesian(xlim=c(0,80))
tmp <- retail %>%
group_by(StockCode, Description) %>%
summarize(count = n()) %>%
arrange(desc(count))
tmp <- head(tmp, n=10)
tmp
tmp %>%
ggplot(aes(x=reorder(Description,count), y=count))+
geom_bar(stat="identity",fill="indian red")+
coord_flip()
retail_sorted <- retail[order(retail$CustomerID),]
library(plyr)
itemList <- ddply(retail,c("InvoiceNo"),
function(df1)paste(df1$Description,
collapse = ","))
itemList$CustomerID <- NULL
itemList$Date <- NULL
colnames(itemList) <- c("items")
write.csv(itemList,"market_basket.csv", quote = FALSE, row.names = TRUE)
print('Description of the transactions')
tr <- read.transactions('market_basket.csv', format = 'basket', sep=',')
tr
summary(tr)
itemFrequencyPlot(tr, topN=20, type='absolute')
itemsets <- apriori(tr,
parameter = list(support=.001,
minlen=2,
target='frequent' # to mine for itemsets
))
summary(itemsets)
inspect(sort(itemsets, by='support', decreasing = T)[1:5])
inspect(sort(itemsets, by='support', decreasing = F)[1:5])
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', tr)
inspect(sort(itemsets, by ='lift', decreasing = T)[1:5])
inspect(sort(itemsets, by ='lift', dddddecreasing = F)[1:5])
rules <- apriori(tr, parameter = list(supp=0.005, conf=0.9))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules[1:10])
bestRules <- rules[1:10]
plot(bestRules)
inspect(rules[1:10])
plot(bestRules, method="graph")
retail <- retail %>%
mutate(Description = fct_recode(Description,
"HERB MARKER" = "HERB MARKER ROSEMARY",
"HERB MARKER" = "HERB MARKER BASIL",
"HERB MARKER" = "HERB MARKER CHIVES",
"HERB MARKER" = "HERB MARKER PARSLEY",
"HERB MARKER" = "HERB MARKER THYME",
"HERB MARKER" = "HERB MARKER MINT"))
require(forcats)
library(plyr)
library(tidyverse)
library(arules)
library(arulesViz)
require(readxl)
require(forcats)
retail <- read_excel('Online retail.xlsx')
retail <- retail[complete.cases(retail), ]
retail <- retail %>% mutate(Description = as.factor(Description))
retail <- retail %>% mutate(Country = as.factor(Country))
retail$Date <- as.Date(retail$InvoiceDate)
retail$Time <- format(retail$InvoiceDate,"%H:%M:%S")
retail$InvoiceNo <- as.numeric(as.character(retail$InvoiceNo))
glimpse(retail)
str(retail)
retail$Time <- as.factor(retail$Time)
retail <- separate(retail, Time, into=c("H", "Min", "Sec"))
retail$Time = retail$H
retail <- select(retail, -c(H,Min, Sec))
retail %>%
ggplot(aes(x=Time)) +
geom_histogram(stat="count",fill="indianred")
detach("package:plyr", unload=TRUE)
retail %>%
group_by(InvoiceNo) %>%
summarize(n_items = mean(Quantity)) %>%
ggplot(aes(x=n_items))+
geom_histogram(fill="steelblue3", bins = 100000) +
geom_rug() +
coord_cartesian(xlim=c(0,80))
tmp <- retail %>%
group_by(StockCode, Description) %>%
summarize(count = n()) %>%
arrange(desc(count))
tmp <- head(tmp, n=10)
tmp
tmp %>%
ggplot(aes(x=reorder(Description,count), y=count))+
geom_bar(stat="identity",fill="indian red")+
coord_flip()
retail_sorted <- retail[order(retail$CustomerID),]
library(plyr)
itemList <- ddply(retail,c("InvoiceNo"),
function(df1)paste(df1$Description,
collapse = ","))
itemList$CustomerID <- NULL
itemList$Date <- NULL
colnames(itemList) <- c("items")
write.csv(itemList,"market_basket.csv", quote = FALSE, row.names = TRUE)
print('Description of the transactions')
tr <- read.transactions('market_basket.csv', format = 'basket', sep=',')
tr
summary(tr)
itemFrequencyPlot(tr, topN=20, type='absolute')
itemsets <- apriori(tr,
parameter = list(support=.001,
minlen=2,
target='frequent' # to mine for itemsets
))
summary(itemsets)
inspect(sort(itemsets, by='support', decreasing = T)[1:5])
inspect(sort(itemsets, by='support', decreasing = F)[1:5])
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', tr)
inspect(sort(itemsets, by ='lift', decreasing = T)[1:5])
inspect(sort(itemsets, by ='lift', dddddecreasing = F)[1:5])
rules <- apriori(tr, parameter = list(supp=0.005, conf=0.9))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules[1:10])
bestRules <- rules[1:10]
plot(bestRules)
inspect(rules[1:10])
plot(bestRules, method="graph")
retail <- retail %>%
mutate(Description = fct_recode(Description,
"HERB MARKER" = "HERB MARKER ROSEMARY",
"HERB MARKER" = "HERB MARKER BASIL",
"HERB MARKER" = "HERB MARKER CHIVES",
"HERB MARKER" = "HERB MARKER PARSLEY",
"HERB MARKER" = "HERB MARKER THYME",
"HERB MARKER" = "HERB MARKER MINT"))
View(retail)
library(plyr)
library(tidyverse)
library(arules)
library(arulesViz)
require(readxl)
require(forcats)
retail <- read_excel('Online retail.xlsx')
retail <- retail %>% mutate(Description = as.factor(Description))
retail <- retail %>% mutate(Country = as.factor(Country))
retail$Date <- as.Date(retail$InvoiceDate)
retail$Time <- format(retail$InvoiceDate,"%H:%M:%S")
retail$InvoiceNo <- as.numeric(as.character(retail$InvoiceNo))
retail <- retail[complete.cases(retail), ]
glimpse(retail)
str(retail)
retail$Time <- as.factor(retail$Time)
retail <- separate(retail, Time, into=c("H", "Min", "Sec"))
retail$Time = retail$H
retail <- select(retail, -c(H,Min, Sec))
retail %>%
ggplot(aes(x=Time)) +
geom_histogram(stat="count",fill="indianred")
detach("package:plyr", unload=TRUE)
retail %>%
group_by(InvoiceNo) %>%
summarize(n_items = mean(Quantity)) %>%
ggplot(aes(x=n_items))+
geom_histogram(fill="steelblue3", bins = 100000) +
geom_rug() +
coord_cartesian(xlim=c(0,80))
tmp <- retail %>%
group_by(StockCode, Description) %>%
summarize(count = n()) %>%
arrange(desc(count))
tmp <- head(tmp, n=10)
tmp
tmp %>%
ggplot(aes(x=reorder(Description,count), y=count))+
geom_bar(stat="identity",fill="indian red")+
coord_flip()
retail_sorted <- retail[order(retail$CustomerID),]
library(plyr)
itemList <- ddply(retail,c("InvoiceNo"),
function(df1)paste(df1$Description,
collapse = ","))
itemList$CustomerID <- NULL
itemList$Date <- NULL
colnames(itemList) <- c("items")
write.csv(itemList,"market_basket.csv", quote = FALSE, row.names = TRUE)
print('Description of the transactions')
tr <- read.transactions('market_basket.csv', format = 'basket', sep=',')
tr
summary(tr)
itemFrequencyPlot(tr, topN=20, type='absolute')
itemsets <- apriori(tr,
parameter = list(support=.001,
minlen=2,
target='frequent' # to mine for itemsets
))
summary(itemsets)
inspect(sort(itemsets, by='support', decreasing = T)[1:5])
inspect(sort(itemsets, by='support', decreasing = F)[1:5])
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', tr)
inspect(sort(itemsets, by ='lift', decreasing = T)[1:5])
inspect(sort(itemsets, by ='lift', dddddecreasing = F)[1:5])
rules <- apriori(tr, parameter = list(supp=0.005, conf=0.9))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules[1:10])
bestRules <- rules[1:10]
plot(bestRules)
inspect(rules[1:10])
plot(bestRules, method="graph")
retail <- retail %>%
mutate(Description = fct_recode(Description,
"HERB MARKER" = "HERB MARKER ROSEMARY",
"HERB MARKER" = "HERB MARKER BASIL",
"HERB MARKER" = "HERB MARKER CHIVES",
"HERB MARKER" = "HERB MARKER PARSLEY",
"HERB MARKER" = "HERB MARKER THYME",
"HERB MARKER" = "HERB MARKER MINT"))
retail_sorted <- retail[order(retail$CustomerID),]
itemList <- ddply(retail,c("InvoiceNo"),
function(df1)paste(df1$Description,
collapse = ","))
itemList$CustomerID <- NULL
itemList$Date <- NULL
colnames(itemList) <- c("items")
write.csv(itemList,"market_basket.csv", quote = FALSE, row.names = TRUE)
tr <- read.transactions('market_basket.csv', format = 'basket', sep=',')
itemFrequencyPlot(tr, topN=20, type='absolute')
itemsets <- apriori(tr,
parameter = list(support=.001,
minlen=2,
target='frequent' # to mine for itemsets
))
summary(itemsets)
inspect(sort(itemsets, by='support', decreasing = T)[1:5])
inspect(sort(itemsets, by='support', decreasing = F)[1:5])
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', tr)
inspect(sort(itemsets, by ='lift', decreasing = T)[1:5])
inspect(sort(itemsets, by ='lift', dddddecreasing = F)[1:5])
rules <- apriori(tr, parameter = list(supp=0.005, conf=0.9))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules[1:10])
bestRules <- rules[1:10]
plot(bestRules)
inspect(rules[1:10])
plot(bestRules, method="graph")
getwd
getwd()
setwd("../TP2")
library(tidyverse)
df <- read_tsv("foodFacts.tsv")
load("/Users/semaraugusto/Desktop/Faculdade/MineracaoDados/TP2/tp2.RData")
df <- base_dados_completa
df <- select(df, c(8, 64, 66, 67, 100, 102, 112, 113, 117, 159))
df <- na.omit(df)
df[apply(sapply(df, is.finite), 1, all),]
df <- df %>% distinct(product_name, .keep_all = TRUE)
wss <- (nrow(df[2:9])-1)*sum(apply(df[2:9],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(df[2:9],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(vegan)
spe.KM.cascade <- cascadeKM(df[2:9], inf.gr=2, sup.gr=10, iter=100, criterion="ssi")
spe.KM.cascade <- cascadeKM(df[2:9], inf.gr=2, sup.gr=10, iter=100, criterion="ssi")
plot(spe.KM.cascade, sortg=TRUE)
?spe.KM.cascade
?cascadeKM
set.seed(7)
grp <- kmeans(df[2:9], 6)
aggregate(df, by=list(grp$cluster), FUN = mean)
mydata <- data.frame(df, grp$cluster)
ggplot(subset(mydata, grp.cluster == 1)) +
geom_bar(aes(x = nutrition.score.fr_100g))
ggplot(subset(mydata, grp.cluster == 1)) +
geom_bar(aes(x = nutrition.score.fr_100g))
ggplot(subset(mydata, grp.cluster == 2)) +
geom_bar(aes(x = nutrition.score.fr_100g))
ggplot(subset(mydata, grp.cluster == 3)) +
geom_bar(aes(x = nutrition.score.fr_100g))
ggplot(subset(mydata, grp.cluster == 3)) +
geom_bar(aes(x = nutrition.score.fr_100g))
ggplot(subset(mydata, grp.cluster == 4)) +
geom_bar(aes(x = nutrition.score.fr_100g))
ggplot(subset(mydata, grp.cluster == 4)) +
geom_bar(aes(x = nutrition.score.fr_100g))
ggplot(subset(mydata, grp.cluster == 5)) +
geom_bar(aes(x = nutrition.score.fr_100g))
ggplot(subset(mydata, grp.cluster == 5)) +
geom_bar(aes(x = nutrition.score.fr_100g))
ggplot(subset(mydata, grp.cluster == 6)) +
geom_bar(aes(x = nutrition.score.fr_100g))
summary(grp)
glimpse(grp)
summary(grp$cluster
)
summary(grp$tot.withinss)
mean(df)
mean(df[,c(2,3)])
mean(df[[],c(2,3)]])
mean(df[[,c(2,3)]])
apply(df, mean, 2)
apply(df, mean, 1)
apply(df, mean)
?apply
apply(df, 2, mean)
